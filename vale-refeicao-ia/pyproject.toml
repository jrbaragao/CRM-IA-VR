[tool.poetry]
name = "vale-refeicao-ia"
version = "1.0.0"
description = "Sistema inteligente para cálculo e gestão de vale refeição com IA"
authors = ["Sistema VR IA"]
license = "MIT"
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
streamlit = "^1.29.0"
pandas = "^2.1.4"
numpy = "^1.26.2"
python-dotenv = "^1.0.0"
llama-index = "^0.9.48"
llama-index-embeddings-openai = "^0.1.5"
llama-index-llms-openai = "^0.1.5"
llama-index-vector-stores-chroma = "^0.1.4"
chromadb = "^0.4.22"
openai = "^1.57.2"
langchain = "^0.1.0"
sqlalchemy = "^2.0.25"
psycopg2-binary = "^2.9.9"
alembic = "^1.13.1"
openpyxl = "^3.1.2"
xlsxwriter = "^3.1.9"
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"
plotly = "^5.18.0"
matplotlib = "^3.8.2"
seaborn = "^0.13.0"
reportlab = "^4.0.8"
weasyprint = "^60.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.3"
black = "^23.12.1"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
isort = "^5.13.2"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=html --cov-report=term"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
